{"version":3,"sources":["utils/ancademy.js"],"names":["Promise","URI","globalData","userInfo","fetchApi","type","params","resolve","reject","wx","request","url","data","Object","assign","header","success","fail","find","page","count","search","start","q","then","res","console","log","findOne","id","login","reslogin","getUserInfo","code","encryptedData","iv","method","encrypteddata","result","orgCode","orgName","err","module","exports"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AACA,MAAMC,MAAM,iCAAZ;;AAEA,IAAIC,aAAa;AACfC,YAAU;AADK,CAAjB;AAGA;;;;;;AAMA,SAASC,QAAT,CAAmBC,IAAnB,EAAyBC,MAAzB,EAAiC;AAC/B,SAAO,IAAIN,OAAJ,CAAY,CAACO,OAAD,EAAUC,MAAV,KAAqB;AACtCC,OAAGC,OAAH,CAAW;AACTC,WAAM,IAAEV,GAAI,MAAGI,IAAK,GADX;AAETO,YAAMC,OAAOC,MAAP,CAAc,EAAd,EAAkBR,MAAlB,CAFG;AAGTS,cAAQ,EAAC,gBAAgB,kBAAjB,EAHC;AAITC,eAAST,OAJA;AAKTU,YAAMT;AALG,KAAX;AAOD,GARM,CAAP;AASD;;AAED;;;;;;;;AAQA,SAASU,IAAT,CAAeb,IAAf,EAAqBc,OAAO,CAA5B,EAA+BC,QAAQ,EAAvC,EAA2CC,SAAS,EAApD,EAAwD;AACtD,QAAMf,SAAS,EAACgB,OAAO,CAACH,OAAO,CAAR,IAAaC,KAArB,EAA4BA,OAAOA,KAAnC,EAAf;AACA,SAAOhB,SAASC,IAAT,EAAegB,SAASR,OAAOC,MAAP,CAAcR,MAAd,EAAsB,EAACiB,GAAGF,MAAJ,EAAtB,CAAT,GAA8Cf,MAA7D,EACJkB,IADI,CACCC,OAAO;AACXC,YAAQC,GAAR,CAAYF,IAAIb,IAAhB;AACA,WAAOa,IAAIb,IAAX;AACD,GAJI,CAAP;AAKD;;AAED;;;;;AAKA,SAASgB,OAAT,CAAkBC,EAAlB,EAAsB;AACpBzB,WAAS,aAAayB,EAAtB,EACGL,IADH,CACQC,OAAO;AACX,WAAOA,IAAIb,IAAX;AACD,GAHH;AAID;;AAED,SAASkB,KAAT,GAAkB;AAChB,SAAO,IAAI9B,OAAJ,CAAY,CAACO,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAI,KAAKN,UAAL,CAAgBC,QAApB,EAA8B;AAC5BI,cAAQ,KAAKL,UAAL,CAAgBC,QAAxB;AACD,KAFD,MAEO;AACLM,SAAGqB,KAAH,CAAS;AACPd,iBAAS,UAAUe,QAAV,EAAoB;AAC3BtB,aAAGuB,WAAH,CAAe;AACbhB,qBAAS,UAAUS,GAAV,EAAe;AACtB,kBAAIQ,OAAOF,SAASE,IAApB;AACA,kBAAIC,gBAAgBT,IAAIS,aAAxB;AACA,kBAAIC,KAAKV,IAAIU,EAAb;AACA,kBAAIhC,WAAWsB,IAAItB,QAAnB;AACAM,iBAAGC,OAAH,CAAW;AACT0B,wBAAQ,MADC;AAETzB,qBAAK,0CAFI;AAGTC,sBAAM;AACJqB,wBAAMA,IADF;AAEJI,iCAAeH,aAFX;AAGJC,sBAAIA;AAHA,iBAHG;AAQTnB,yBAAUsB,MAAD,IAAY;AACnBZ,0BAAQC,GAAR,CAAYW,OAAO1B,IAAP,CAAY2B,OAAxB;AACApC,2BAASoC,OAAT,GAAmBD,OAAO1B,IAAP,CAAY2B,OAA/B;AACApC,2BAASqC,OAAT,GAAmBF,OAAO1B,IAAP,CAAY4B,OAA/B;AACAjC,0BAAQJ,QAAR;AACD,iBAbQ;AAcTc,sBAAOwB,GAAD,IAAS;AACbjC,yBAAOiC,GAAP;AACD;AAhBQ,eAAX;AAkBD;AAxBY,WAAf;AA0BD;AA5BM,OAAT;AA8BD;AACF,GAnCM,CAAP;AAoCD;AACDC,OAAOC,OAAP,GAAiB,EAACzB,IAAD,EAAOU,OAAP,EAAgB1B,UAAhB,EAA4B4B,KAA5B,EAAjB","file":"ancademy.js","sourcesContent":["import Promise from './es6-promise.js'\nconst URI = 'https://www.ancademy.org/apiv1/'\n\nvar globalData = {\n  userInfo: null\n}\n/**\n * TODO\n * @param  {String} type   类型，例如：'course','research'\n * @param  {Objece} params 参数\n * @return {Promise}       包含抓取任务的Promise\n */\nfunction fetchApi (type, params) {\n  return new Promise((resolve, reject) => {\n    wx.request({\n      url: `${URI}/${type}`,\n      data: Object.assign({}, params),\n      header: {'Content-Type': 'application/json'},\n      success: resolve,\n      fail: reject\n    })\n  })\n}\n\n/**\n * 获取列表类型的数据 TODO\n * @param  {String} type   类型\n * @param  {Number} page   页码\n * @param  {Number} count  页条数\n * @param  {String} search 搜索关键词\n * @return {Promise}       包含抓取任务的Promise\n */\nfunction find (type, page = 1, count = 20, search = '') {\n  const params = {start: (page - 1) * count, count: count}\n  return fetchApi(type, search ? Object.assign(params, {q: search}) : params)\n    .then(res => {\n      console.log(res.data)\n      return res.data\n    })\n}\n\n/**\n * 获取单条类型的数据 TODO\n * @param  {Number} id\n * @return {Promise}       包含抓取任务的Promise\n */\nfunction findOne (id) {\n  fetchApi('subject/' + id)\n    .then(res => {\n      return res.data\n    })\n}\n\nfunction login () {\n  return new Promise((resolve, reject) => {\n    if (this.globalData.userInfo) {\n      resolve(this.globalData.userInfo)\n    } else {\n      wx.login({\n        success: function (reslogin) {\n          wx.getUserInfo({\n            success: function (res) {\n              var code = reslogin.code\n              var encryptedData = res.encryptedData\n              var iv = res.iv\n              var userInfo = res.userInfo\n              wx.request({\n                method: 'POST',\n                url: 'https://www.ancademy.org/wechat/loginxcx',\n                data: {\n                  code: code,\n                  encrypteddata: encryptedData,\n                  iv: iv\n                },\n                success: (result) => {\n                  console.log(result.data.orgCode)\n                  userInfo.orgCode = result.data.orgCode\n                  userInfo.orgName = result.data.orgName\n                  resolve(userInfo)\n                },\n                fail: (err) => {\n                  reject(err)\n                }\n              })\n            }\n          })\n        }\n      })\n    }\n  })\n}\nmodule.exports = {find, findOne, globalData, login}\n"]}